@using DevelopmentMetrics.Cards
@using DevelopmentMetrics.Website.Models
@model DevelopmentMetrics.Website.Models.CardsViewModel
@{
    ViewBag.Title = "Cards";

    var @metrics = @Model.GetCardCountByStatus();
}

<script type="text/javascript" src="https://www.google.com/jsapi"> </script>

<div class="row">
    <div class="col-md-5">
        <h2>Card metrics</h2>
    </div>
    <div class="col-md-5">
        <h4>
            Lead time (in days): @Model.CalculateLeadTime()
        </h4>
        <h4>
            Work in process: Todo (@metrics[CardStatus.Status.Todo]) & Doing (@metrics[CardStatus.Status.Doing])
        </h4>
    </div>
    <div class="col-md-2">
        @Html.Partial("_ChartFilter",
            new ChartFilterViewModel(
                "menu1",
                "Chart data",
                "chartMenuItem",
                @Model.GetBuildWeeksList(),
                new Dictionary<string, string> { { "Refresh data", "-1" } }
                ))
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div id="chart_div" class="chartWrapper"></div>
    </div>
    @if (@metrics[CardStatus.Status.Unassigned] > 0)
    {
        <div class="col-md-12">
            <div class="alert alert-warning"><span class="glyphicon glyphicon-warning-sign"></span>&nbsp;There are unassigned cards included in the data which will make the reported figures less accurate</div>
        </div>
    }
</div>

<div class="row">
    <div class="col-md-6">
        <h4>Cards in todo (@metrics[CardStatus.Status.Todo]):</h4>
        @foreach (var card in Model.GetCardsInTodo())
        {
            var @css = (@card.TypeName == "Defect") ? "alert-danger" : (@card.TypeName == "Improvement") ? "alert-info" : "alert-success";
            <div class="col-md-12">
                <div class="alert @css">
                    @card.Title
                </div>
            </div>
        }
    </div>
    <div class="col-md-6">
        <h4>Cards in doing (@metrics[CardStatus.Status.Doing]):</h4>
        @foreach (var card in Model.GetCardsInDoing())
        {
            var @css = (@card.TypeName == "Defect") ? "alert-danger" : (@card.TypeName == "Improvement") ? "alert-info" : "alert-success";
            <div class="col-md-12">
                <div class="alert @css">
                    @card.Title
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    google.load("visualization", "1",
        {
            packages: ["line", "corechart"]
        });

    google.setOnLoadCallback(drawCardChart);
</script>
